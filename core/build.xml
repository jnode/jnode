<project name="JNode-Builder" default="all" basedir=".">

  <typedef file="${basedir}/../all/lib/jnode.xml"/>
		
  <property name="my-build.dir" value="${basedir}/build"/>
  <property name="my-gen.dir" value="${my-build.dir}/gen"/>
  <property name="my-classes.dir" value="${my-build.dir}/classes"/>
  <property name="my-src.dir" value="${basedir}/src"/>

  <!-- Subproject specific classpath -->
  <path id="my-cp">
    <path refid="cp"/>
  </path>

  <macrodef name="ExpandTest">
    <attribute name="classname"/>
    <attribute name="type"/>
    <attribute name="template" default="${my-src.dir}/test/org/jnode/test/PrimitiveTest.jtemplate"/>
    <sequential>
      <copy tofile="${my-gen.dir}/org/jnode/test/@{classname}.java" file="@{template}">
        <filterset>
          <filter token="classname" value="@{classname}"/>
          <filter token="type" value="@{type}"/>
        </filterset>
      </copy>
    </sequential>
  </macrodef>

  <!-- Initialize all subproject directories -->
  <target name="prepare">
    <mkdir dir="${my-classes.dir}"/>
    <mkdir dir="${my-gen.dir}"/>
  	<jnode.copy-descriptors/>

  	<copy todir="${my-classes.dir}">
      <fileset dir="${my-src.dir}/classpath/gnu" includes="**/*.properties"/>
      <fileset dir="${my-src.dir}/classpath/java" includes="**/*.properties"/>
      <fileset dir="${my-src.dir}/classpath/vm" includes="**/*.security"/>
    </copy>
    <ExpandTest classname="PrimitiveIntTest" type="int"/>
    <ExpandTest classname="PrimitiveLongTest" type="long"/>
    <ExpandTest classname="PrimitiveFloatTest" type="float"/>
    <ExpandTest classname="PrimitiveDoubleTest" type="double"/>
  </target>

  <!-- Compile all subproject java files -->
  <target name="compile" depends="prepare">
    <jnode.compile>
      <bootclasspath>
        <pathelement location="${my-src.dir}/classpath/gnu"/>
        <pathelement location="${my-src.dir}/classpath/java"/>
        <pathelement location="${my-src.dir}/classpath/javax"/>
        <pathelement location="${my-src.dir}/classpath/org"/>
        <pathelement location="${my-src.dir}/classpath/5.0"/>
        <pathelement location="${my-src.dir}/classpath/ext"/>
        <pathelement location="${my-src.dir}/classpath/vm"/>
      </bootclasspath>
      <src path="${my-src.dir}/classpath/gnu"/>
      <src path="${my-src.dir}/classpath/java"/>
      <src path="${my-src.dir}/classpath/javax"/>
      <src path="${my-src.dir}/classpath/org"/>
      <src path="${my-src.dir}/classpath/5.0"/>
      <src path="${my-src.dir}/classpath/ext"/>        
      <src path="${my-src.dir}/classpath/vm"/>
      <src path="${my-src.dir}/core"/>
      <src path="${my-src.dir}/vmmagic"/>
      <src path="${my-src.dir}/mmtk"/>
      <src path="${my-src.dir}/mmtk-vm"/>
      <src path="${my-src.dir}/driver"/>
      <src path="${my-src.dir}/test"/>
      <src path="${my-gen.dir}"/>
      <classpath refid="my-cp"/>
    </jnode.compile>
    <!-- Copy all non java files to class dir -->
    <copy todir="${my-classes.dir}">
      <fileset dir="${my-src.dir}/core" excludes="**/*.java,**/package.html"/>
      <fileset dir="${my-src.dir}/driver" excludes="**/*.java,**/package.html"/>
    </copy>
  </target>

  <!-- Assemble the jarfile -->
  <target name="assemble" depends="compile">
  </target>

  <!-- Do it all -->
  <target name="all" depends="assemble"/>

  <!-- Clean everything -->
  <target name="clean">
  	<jnode.clean/>
  </target>

</project>


