#
# Copyright 2004-2006 Sun Microsystems, Inc.  All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
# CA 95054 USA or visit www.sun.com if you need additional information or
# have any questions.
#

apt.msg.usage.header=\
Usage: {0} <apt and javac options> <source files>\n\
where apt options include:

apt.msg.usage.footer=\
See javac -help for information on javac options.

apt.msg.usage.nonstandard.footer=\
These options are non-standard and subject to change without notice, \nas is the format of their output.

apt.msg.bug=\
An exception has occurred in apt ({0}). \
Please file a bug at the Java Developer Connection (http://java.sun.com/webapps/bugreport)  \
after checking the Bug Parade for duplicates. \
Include your program and the following diagnostic in your report.  Thank you.

## apt options

apt.opt.A=\
    Options to pass to annotation processors
apt.opt.arg.class=\
    <class>
apt.opt.arg.directory=\
    Specify where to place processor and javac generated class files
apt.opt.classpath=\
    Specify where to find user class files and annotation processor factories
apt.opt.d=\
    Specify where to place processor and javac generated class files
apt.opt.factory=\
    Name of AnnotationProcessorFactory to use; bypasses default discovery process
apt.opt.factorypath=\
    Specify where to find annotation processor factories
apt.opt.s=\
    Specify where to place processor generated source files
apt.opt.help=\
    Print a synopsis of standard options; use javac -help for more options
apt.opt.print=\
    Print out textual representation of specified types
apt.opt.nocompile=\
    Do not compile source files to class files
apt.opt.proc.flag=\
    [key[=value]]
apt.opt.version=\
    Version information
apt.opt.XListAnnotationTypes=\
    List found annotation types
apt.opt.XListDeclarations=\
    List specified and included declarations
apt.opt.XPrintAptRounds=\
    Print information about initial and recursive apt rounds
apt.opt.XPrintFactoryInfo=\
    Print information about which annotations a factory is asked to process
apt.opt.XClassesAsDecls=\
    Treat both class and source files as declarations to process

##
## errors
##

## All errors which do not refer to a particular line in the source code are
## preceded by this string.

apt.err.error=\
    error:\u0020

apt.err.unsupported.source.version=\
    Source release {0} is not supported; use release 5 or earlier

apt.err.unsupported.target.version=\
    Target release {0} is not supported; use release 5 or earlier

apt.err.BadDeclaration=\
    Bad declaration created for annotation type {0}

apt.err.CantFindClass=\
    Could not find class file for {0}

apt.err.DeclarationCreation=\
    Could not create declaration for annotation type {0}

# Print an error from the Messager
apt.err.Messager=\
    {0}

##
## miscellaneous strings
##

apt.misc.Problem=\
    Problem encountered during annotation processing; \nsee stacktrace below for more information.

apt.misc.SunMiscService=\
    Error finding annotation processor factories; \ncheck META-INF/services information.

# Print a notice from the Messager
apt.note.Messager=\
    {0}

##
## warnings
##

## All warning messages are preceded by the following string.
apt.warn.warning=\
    warning:\u0020

apt.warn.AnnotationsWithoutProcessors=\
    Annotation types without processors: {0}

apt.warn.BadFactory=\
    Bad annotation processor factory: {0} 

apt.warn.BadParentDirectory=\
    Failed to create some parent directory of {0} 

apt.warn.FactoryCantInstantiate=\
    Could not instantiate an instance of factory ''{0}''.

apt.warn.FactoryWrongType=\
    Specified factory, ''{0}'', is not an AnnotationProcessorFactory.

apt.warn.FactoryNotFound=\
    Specified AnnotationProcessorFactory, ''{0}'', not found on search path.

apt.warn.FileReopening=\
    Attempt to create ''{0}'' multiple times

apt.warn.IllegalFileName=\
    Cannot create file for illegal name ''{0}''.

apt.warn.MalformedSupportedString=\
    Malformed string for annotation support, ''{0}'', returned by factory.

apt.warn.NoNewFilesAfterRound=\
    Cannot create file ''{0}'' after a round has ended.

# Print a warning from the Messager
apt.warn.Messager=\
    {0}

apt.warn.NoAnnotationProcessors=\
    No annotation processors found but annotations present.

apt.warn.NullProcessor=\
    Factory {0} returned null for an annotation processor.

apt.warn.CorrespondingClassFile=\
    A class file corresponding to source file ''{0}'' has already been created.

apt.warn.CorrespondingSourceFile=\
    A source file corresponding to class file ''{0}'' has already been created.
