#
# Copyright 2005-2006 Sun Microsystems, Inc.  All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
# CA 95054 USA or visit www.sun.com if you need additional information or
# have any questions.
#

#
# don't modify nor delete anything for backward compatibility
#

ContentHandlerEx.UnexpectedEnterElement = \
	Unexpected element '{'{0}'}':{1}

ContentHandlerEx.UnexpectedLeaveElement = \
	Unexpected end of element '{'{0}'}':{1}

ContentHandlerEx.UnexpectedEnterAttribute = \
	Unexpected attribute '{'{0}'}':{1}

ContentHandlerEx.UnexpectedLeaveAttribute = \
	Unexpected end of attribute '{'{0}'}':{1}

ContentHandlerEx.UnexpectedText = \
	Unexpected text "{0}"

ContentHandlerEx.UnexpectedLeaveChild = \
	compiler error(unexpectedLeaveChild)
	
SAXUnmarshallerHandlerImpl.UnexpectedRootElement = \
	unexpected root element {0}
	
SAXUnmarshallerHandlerImpl.UnexpectedRootElement2 = \
	unexpected root element (uri:"{0}", local:"{1}"). Expected elements are {2}
	
Util.UndefinedPrefix = \
	undefined prefix: {0}
	
Unmarshaller.NullReader = \
	reader can not be null	
	
Unmarshaller.IllegalReaderState = \
	reader must be on a START_ELEMENT event, not a {0} event
	
 
