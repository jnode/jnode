/*
 * Copyright 2000-2005 Sun Microsystems, Inc.  All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Sun designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Sun in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * CA 95054 USA or visit www.sun.com if you need additional information or
 * have any questions.
 */
package sun.applet.resources;

import java.util.ListResourceBundle;

public class MsgAppletViewer_it extends ListResourceBundle {

    public Object[][] getContents() {
        return new Object[][] {
            {"textframe.button.dismiss", "Annulla"},
            {"appletviewer.tool.title", "Visualizzatore applet: {0}"},
            {"appletviewer.menu.applet", "Applet"},
            {"appletviewer.menuitem.restart", "Riavvia"},
            {"appletviewer.menuitem.reload", "Ricarica"},
            {"appletviewer.menuitem.stop", "Arresta"},
            {"appletviewer.menuitem.save", "Salva..."},
            {"appletviewer.menuitem.start", "Avvio"},
            {"appletviewer.menuitem.clone", "Clona..."},
            {"appletviewer.menuitem.tag", "Tag..."},
            {"appletviewer.menuitem.info", "Informazioni..."},
            {"appletviewer.menuitem.edit", "Modifica"},
            {"appletviewer.menuitem.encoding", "Codifica caratteri"},
            {"appletviewer.menuitem.print", "Stampa..."},
            {"appletviewer.menuitem.props", "Propriet\u00e0..."},
            {"appletviewer.menuitem.close", "Chiudi"},
            {"appletviewer.menuitem.quit", "Esci"},
            {"appletviewer.label.hello", "Ciao..."},
            {"appletviewer.status.start", "avvio dell'applet in corso..."},
            {"appletviewer.appletsave.filedialogtitle","Serializza applet in file"},
            {"appletviewer.appletsave.err1", "serializzazione di {0} in {1}"},
            {"appletviewer.appletsave.err2", "in appletSave: {0}"},
            {"appletviewer.applettag", "Mostra tag"},
            {"appletviewer.applettag.textframe", "Tag HTML dell'applet"},
            {"appletviewer.appletinfo.applet", "-- nessuna informazione sull'applet --"},
            {"appletviewer.appletinfo.param", "-- nessuna informazione sul parametro --"},
            {"appletviewer.appletinfo.textframe", "Informazioni sull'applet"},
            {"appletviewer.appletprint.fail", "Stampa non riuscita."},
            {"appletviewer.appletprint.finish", "Operazione di stampa completata."},
            {"appletviewer.appletprint.cancel", "Stampa annullata."},
            {"appletviewer.appletencoding", "Codifica caratteri: {0}"},
            {"appletviewer.parse.warning.requiresname", "Avviso: il tag <param name=... value=...> richiede un attributo per il nome."},
            {"appletviewer.parse.warning.paramoutside", "Avviso: il tag <param> non \u00e8 racchiuso tra <applet> ... </applet>."},
            {"appletviewer.parse.warning.applet.requirescode", "Avviso: <applet> il tag <applet> richiede un attributo di codice"},
            {"appletviewer.parse.warning.applet.requiresheight", "Avviso: <applet> il tag <applet> richiede un attributo di altezza"},
            {"appletviewer.parse.warning.applet.requireswidth", "Avviso: il tag <applet> richiede un attributo di larghezza"},
            {"appletviewer.parse.warning.object.requirescode", "Avviso: il tag <object> richiede un attributo di codice"},
            {"appletviewer.parse.warning.object.requiresheight", "Avviso: il tag <object> richiede un attributo di altezza"},
            {"appletviewer.parse.warning.object.requireswidth", "Avviso: il tag <object> richiede un attributo di larghezza"},
            {"appletviewer.parse.warning.embed.requirescode", "Avviso: il tag <embed> richiede un attributo di codice"},
            {"appletviewer.parse.warning.embed.requiresheight", "Avviso: il tag <embed> richiede un attributo di altezza"},
            {"appletviewer.parse.warning.embed.requireswidth", "Avviso: il tag <embed> richiede un attributo di larghezza"},
            {"appletviewer.parse.warning.appnotLongersupported", "Avviso: il tag <app> non \u00e8 pi\u00f9 supportato, usare <applet> al suo posto:"},
            {"appletviewer.usage", "Utilizzo: appletviewer <opzioni> url\n\ndove <opzioni> includono i valori:\n  -debug                  Avvia l'applet viewer nel debugger Java\n  -encoding <codifica>    Specifica la codifica dei caratteri utilizzata dai file HTML\n  -J<flag di runtime>        Passa l'argomento all'interprete java\n\nL'opzione -J \u00e8 non standard ed \u00e8 soggetta a cambiamenti senza preavviso."},
            {"appletviewer.main.err.unsupportedopt", "Opzione non supportata: {0}"},
            {"appletviewer.main.err.unrecognizedarg", "Argomento non riconosciuto {0}"},
            {"appletviewer.main.err.dupoption", "Uso duplice dell''opzione: {0}"},
	    {"appletviewer.main.err.inputfile", "Nessun file di input specificato."},
            {"appletviewer.main.err.badurl", "URL errato: {0} ( {1} )"},
            {"appletviewer.main.err.io", "Eccezione di I/O durante la lettura: {0}"},
            {"appletviewer.main.err.readablefile", "Verificare che {0} sia un file leggibile."},
            {"appletviewer.main.err.correcturl", "Verificare che {0} sia l''URL corretto"},
            {"appletviewer.main.prop.store", "Propriet\u00e0 specifiche dell'utente per AppletViewer"},
	    {"appletviewer.main.err.prop.cantread", "Impossibile leggere il file di propriet\u00e0 dell''utente: {0}"},
            {"appletviewer.main.err.prop.cantsave", "Impossibile salvare il file di propriet\u00e0 dell''utente: {0}"},
            {"appletviewer.main.warn.nosecmgr", "Avviso: Disabilitazione sicurezza in corso."},
	    {"appletviewer.main.debug.cantfinddebug", "Impossibile trovare il debugger!"},
	    {"appletviewer.main.debug.cantfindmain", "Impossibile trovare il metodo principale del debugger"},
            {"appletviewer.main.debug.exceptionindebug", "Eccezione nel debugger"},
	    {"appletviewer.main.debug.cantaccess", "Impossibile accedere al debugger"},
            {"appletviewer.main.nosecmgr", "Avviso: SecurityManager non installato!"},
            {"appletviewer.main.warning", "Avviso: nessun applet avviato. Verificare che i dati inseriti contengano un tag <applet>."},
            {"appletviewer.main.warn.prop.overwrite", "Avviso: si sta temporaneamente sovrascrivendo le propriet\u00e0 del sistema come richiesto dell''utente: tasto: {0} valore precedente: {1} nuovo valore: {2}"},
            {"appletviewer.main.warn.cantreadprops", "Avviso: Impossibile leggere il file di propriet\u00e0 di AppletViewer: {0} verranno utilizzati i valori di default."},
	    {"appletioexception.loadclass.throw.interrupted", "caricamento della classe interrotto: {0}"},
            {"appletioexception.loadclass.throw.notloaded", "classe non caricata: {0}"},
            {"appletclassloader.loadcode.verbose", "Apertura del flusso su: {0} per ottenere {1}"},
            {"appletclassloader.filenotfound", "File non trovato durante la ricerca di: {0}"},
            {"appletclassloader.fileformat", "Eccezione del formato di file durante il caricamento: {0}"},
            {"appletclassloader.fileioexception", "Eccezione di I/O durante il caricamento: {0}"},
            {"appletclassloader.fileexception", "Eccezione di {0} durante il caricamento: {1}"},
            {"appletclassloader.filedeath", "{0} terminato durante il caricamento di: {1}"},
            {"appletclassloader.fileerror", "Errore di {0} durante il caricamento: {1}"},
            {"appletclassloader.findclass.verbose.findclass", "{0} individuazione classe {1}"},
            {"appletclassloader.findclass.verbose.openstream", "Apertura del flusso su: {0} per ottenere {1}"},
            {"appletclassloader.getresource.verbose.forname", "AppletClassLoader.getResource per il nome: {0}"},
            {"appletclassloader.getresource.verbose.found", "Risorsa {0} individuata come risorsa di sistema"},
            {"appletclassloader.getresourceasstream.verbose", "Risorsa {0} individuata come risorsa di sistema"},
            {"appletpanel.runloader.err", "Specificare un parametro per l'oggetto o per il codice"},
            {"appletpanel.runloader.exception", "eccezione durante la deserializzazione {0}"},
            {"appletpanel.destroyed", "Applet distrutto."},
            {"appletpanel.loaded", "Applet caricato."},
            {"appletpanel.started", "Applet avviato."},
            {"appletpanel.inited", "Applet inizializzato."},
            {"appletpanel.stopped", "Applet interrotto."},
            {"appletpanel.disposed", "Applet eliminato."},
            {"appletpanel.nocode", "Tag APPLET mancante dal parametro CODE."},
            {"appletpanel.notfound", "caricamento: classe {0} non trovata."},
            {"appletpanel.nocreate", "caricamento: impossibile definire istanze per {0}."},
            {"appletpanel.noconstruct", "caricamento: {0} non \u00e8 pubblico o non \u00e8 associato a un costruttore pubblico."},
            {"appletpanel.death", "terminato"},
            {"appletpanel.exception", "eccezione: {0}."},
            {"appletpanel.exception2", "eccezione: {0}: {1}."},
            {"appletpanel.error", "errore: {0}."},
            {"appletpanel.error2", "errore: {0}: {1}."},
            {"appletpanel.notloaded", "Inizializzazione: applet non caricato."},
            {"appletpanel.notinited", "Avvio: applet non inizializzato."},
            {"appletpanel.notstarted", "Arresto: applet non avviato."},
            {"appletpanel.notstopped", "Distruzione: applet non arrestato."},
            {"appletpanel.notdestroyed", "Eliminazione: applet non distrutto."},
            {"appletpanel.notdisposed", "Caricamento: applet non eliminato."},
            {"appletpanel.bail", "Interruzione: uscita in corso."},
            {"appletpanel.filenotfound", "File non trovato durante la ricerca di: {0}"},
            {"appletpanel.fileformat", "Eccezione del formato di file durante il caricamento: {0}"},
            {"appletpanel.fileioexception", "Eccezione di I/O durante il caricamento: {0}"},
            {"appletpanel.fileexception", "Eccezione di {0} durante il caricamento: {1}"},
            {"appletpanel.filedeath", "{0} terminato durante il caricamento di: {1}"},
            {"appletpanel.fileerror", "Errore di {0} durante il caricamento: {1}"},
            {"appletpanel.badattribute.exception", "Analisi HTML: valore specificato per l'attributo larghezza/altezza non corretto"},
            {"appletillegalargumentexception.objectinputstream", "AppletObjectInputStream richiede una funzione di caricamento non nulla"},
            {"appletprops.title", "Propriet\u00e0 di AppletViewer"},
            {"appletprops.label.http.server", "Server proxy Http:"},
            {"appletprops.label.http.proxy", "Porta proxy Http:"},
            {"appletprops.label.network", "Accesso alla rete:"},
            {"appletprops.choice.network.item.none", "Nessuno"},
            {"appletprops.choice.network.item.applethost", "Host applet"},
            {"appletprops.choice.network.item.unrestricted", "Illimitato"},
            {"appletprops.label.class", "Accesso alle classi:"},
            {"appletprops.choice.class.item.restricted", "Limitato"},
            {"appletprops.choice.class.item.unrestricted", "Illimitato"},
            {"appletprops.label.unsignedapplet", "Consenti applet non firmati:"},
            {"appletprops.choice.unsignedapplet.no", "No"},
            {"appletprops.choice.unsignedapplet.yes", "S\u00ec"},
            {"appletprops.button.apply", "Applica"},
            {"appletprops.button.cancel", "Annulla"},
            {"appletprops.button.reset", "Reimposta"},
            {"appletprops.apply.exception", "Salvataggio delle propriet\u00e0 non riuscito: {0}"},
            /* 4066432 */
	    {"appletprops.title.invalidproxy", "Voce non valida"},
	    {"appletprops.label.invalidproxy", "La porta Proxy deve essere un valore intero positivo"},
	    {"appletprops.button.ok", "OK"},
	    /* end 4066432 */
            {"appletprops.prop.store", "Propriet\u00e0 specifiche dell'utente per AppletViewer"},
            {"appletsecurityexception.checkcreateclassloader", "Eccezione di protezione: classloader"},
            {"appletsecurityexception.checkaccess.thread", "Eccezione di protezione: thread"},
            {"appletsecurityexception.checkaccess.threadgroup", "Eccezione di protezione: threadgroup: {0}"},
            {"appletsecurityexception.checkexit", "Eccezione di protezione: exit: {0}"},
            {"appletsecurityexception.checkexec", "Eccezione di protezione: exec: {0}"},
            {"appletsecurityexception.checklink", "Eccezione di protezione: link: {0}"},
            {"appletsecurityexception.checkpropsaccess", "Eccezione di protezione: properties"},
            {"appletsecurityexception.checkpropsaccess.key", "Eccezione di protezione: properties access {0}"},
            {"appletsecurityexception.checkread.exception1", "Eccezione di protezione: {0}, {1}"},
            {"appletsecurityexception.checkread.exception2", "Eccezione di protezione: file.read: {0}"},
            {"appletsecurityexception.checkread", "Eccezione di protezione: file.read: {0} == {1}"},
            {"appletsecurityexception.checkwrite.exception", "Eccezione di protezione: {0}, {1}"},
            {"appletsecurityexception.checkwrite", "Eccezione di protezione: file.write: {0} == {1}"},
            {"appletsecurityexception.checkread.fd", "Eccezione di protezione: fd.read"},
            {"appletsecurityexception.checkwrite.fd", "Eccezione di protezione: fd.write"},
            {"appletsecurityexception.checklisten", "Eccezione di protezione: socket.listen: {0}"},
            {"appletsecurityexception.checkaccept", "Eccezione di protezione: socket.accept: {0}:{1}"},
            {"appletsecurityexception.checkconnect.networknone", "Eccezione di protezione: socket.connect: {0}->{1}"},
            {"appletsecurityexception.checkconnect.networkhost1", "Eccezione di protezione: impossibile connettersi a {0} con origine {1}."},
            {"appletsecurityexception.checkconnect.networkhost2", "Eccezione di protezione: impossibile risolvere l''indirizzo IP per l''host {0} o per {1}. "},
            {"appletsecurityexception.checkconnect.networkhost3", "Eccezione di protezione: impossibile risolvere l''indirizzo IP per l''host {0}. Vedere la propriet\u00e0 trustProxy."},
            {"appletsecurityexception.checkconnect", "Eccezione di protezione: connessione: {0}->{1}"},
            {"appletsecurityexception.checkpackageaccess", "Eccezione di protezione: impossibile accedere al package: {0}"},
            {"appletsecurityexception.checkpackagedefinition", "Eccezione di protezione: impossibile definire il package: {0}"},
            {"appletsecurityexception.cannotsetfactory", "Eccezione di protezione: impossibile impostare i valori predefiniti"},
            {"appletsecurityexception.checkmemberaccess", "Eccezione di protezione: controllare l'accesso del membro"},
            {"appletsecurityexception.checkgetprintjob", "Eccezione di protezione: getPrintJob"},
            {"appletsecurityexception.checksystemclipboardaccess", "Eccezione di protezione: getSystemClipboard"},
            {"appletsecurityexception.checkawteventqueueaccess", "Eccezione di protezione: getEventQueue"},
            {"appletsecurityexception.checksecurityaccess", "Eccezione di protezione: operazione di protezione: {0}"},
            {"appletsecurityexception.getsecuritycontext.unknown", "tipo di funzione di caricamento della classe sconosciuto, impossibile verificare la presenza di getContext"},
            {"appletsecurityexception.checkread.unknown", "tipo di funzione di caricamento della classe sconosciuto, impossibile verificare la lettura di {0}"},
            {"appletsecurityexception.checkconnect.unknown", "tipo di funzione di caricamento della classe sconosciuto, impossibile verificare la connessione"},
        };
    }
}
