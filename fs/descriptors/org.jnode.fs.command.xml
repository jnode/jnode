<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plugin SYSTEM "jnode.dtd">

<plugin id="org.jnode.fs.command"
        name="JNode filesystem commands"
        version="@VERSION@"
        license-name="lgpl"
        provider-name="JNode.org">

  <requires>
    <import plugin="org.jnode.fs"/>
    <import plugin="org.jnode.shell"/>
    <import plugin="org.jnode.shell.syntax"/>
    <import plugin="org.jnode.protocol.nfs"/>
  </requires>

  <runtime>
    <library name="jnode-fs.jar">
      <export name="org.jnode.fs.command.*"/>
    </library>
  </runtime>

  <extension point="org.jnode.shell.aliases">
    <alias name="eject" class="org.jnode.fs.command.EjectCommand"/>
    <alias name="mount" class="org.jnode.fs.command.MountCommand"/>
  </extension>

  <extension point="org.jnode.shell.syntaxes">
    <syntax alias="eject">
      <sequence>
        <optional><option argLabel="t" shortName="t" description="load a device with a removable medium"/></optional>
        <optional><argument argLabel="device" description="eject a device with a removable medium"/></optional>
      </sequence>
    </syntax>
    <syntax alias="mount">
      <empty description="list all mounted filesystems"/>
      <sequence description="mount a filesystem"> 
        <argument argLabel="device" description="the device holding the file system"/>
        <argument argLabel="directory" description="the mountpoint"/>
        <argument argLabel="fsPath" description="the file system's root directory"/>
      </sequence>
    </syntax>
  </extension>

  <extension point="org.jnode.security.permissions">
    <permission class="java.io.FilePermission" name="&lt;&lt;ALL FILES&gt;&gt;" actions="read,write,delete"/>
    <permission class="java.net.SocketPermission" name="*:0-" actions="connect,resolve"/>
    <permission class="java.util.PropertyPermission" name="user.dir" actions="read,write"/>
    <permission class="java.util.PropertyPermission" name="*" actions="read,write"/>
    <permission class="java.net.NetPermission" name="specifyStreamHandler"/>
    <permission class="java.lang.RuntimePermission" name="modifyThreadGroup"/>
    <permission class="java.lang.RuntimePermission" name="exitVM"/>
    <permission class="org.jnode.permission.JNodePermission" name="getVmClass"/>
  </extension>

</plugin>
