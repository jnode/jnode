/*
 * Automatically generated by jrpcgen 1.0.7 on 10/5/07 11:09 PM
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://remotetea.sourceforge.net for details
 */
package org.jnode.fs.nfs.nfs2.rpc.mount;

import java.io.IOException;
import java.net.InetAddress;

import org.acplt.oncrpc.OncRpcClientStub;
import org.acplt.oncrpc.OncRpcException;
import org.acplt.oncrpc.XdrVoid;

/**
 * The class <code>Mount1Client</code> implements the client stub proxy for
 * the MOUNTPROG remote program. It provides method stubs which, when called, in
 * turn call the appropriate remote method (procedure).
 */
public class Mount1Client extends OncRpcClientStub {

    private static final int MOUNT_CODE = 100005;
    private static final int MOUNT_VERSION = 1;

    private static final int PROCEDURE_TEST = 0;
    private static final int PROCEDURE_MOUNT = 1;
    private static final int PROCEDURE_UNMOUNT = 3;

    public static final int FILE_HANDLE_SIZE = 32;
    public static final int MAX_PATH_LENGHT = 1024;
    public static final int MAX_NAME_LENGHT = 255;

    public static final int MOUNT_OK = 0;

    /**
     * Constructs a <code>Mount1Client</code> client stub proxy object from
     * which the MOUNTPROG remote program can be accessed.
     *
     * @param host     Internet address of host where to contact the remote
     *                 program.
     * @param protocol {@link org.acplt.oncrpc.OncRpcProtocols Protocol} to be
     *                 used for ONC/RPC calls.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException     if an I/O error occurs.
     */
    public Mount1Client(InetAddress host, int protocol) throws OncRpcException, IOException {
        super(host, MOUNT_CODE, 1, 0, protocol);
    }

    /**
     * Constructs a <code>Mount1Client</code> client stub proxy object from
     * which the MOUNTPROG remote program can be accessed.
     *
     * @param host     Internet address of host where to contact the remote
     *                 program.
     * @param port     Port number at host where the remote program can be
     *                 reached.
     * @param protocol {@link org.acplt.oncrpc.OncRpcProtocols Protocol} to be
     *                 used for ONC/RPC calls.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException     if an I/O error occurs.
     */
    public Mount1Client(InetAddress host, int port, int protocol) throws OncRpcException, IOException {
        super(host, MOUNT_CODE, 1, port, protocol);
    }

    /**
     * Call remote procedure test.
     *
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException     if an I/O error occurs.
     */
    public void test() throws OncRpcException, IOException {
        XdrVoid argument = XdrVoid.XDR_VOID;
        XdrVoid result = XdrVoid.XDR_VOID;
        client.call(PROCEDURE_TEST, MOUNT_VERSION, argument, result);
    }

    /**
     * Call remote procedure mount.
     *
     * @param dirPath parameter (of type DirPath) to the remote procedure call.
     * @return Result from remote procedure call (of type MountResult).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException     if an I/O error occurs.
     */
    public MountResult mount(DirPath dirPath) throws OncRpcException, IOException {
        MountResult result = new MountResult();
        client.call(PROCEDURE_MOUNT, MOUNT_VERSION, dirPath, result);
        return result;
    }

    public void unmount(DirPath dirPath) throws OncRpcException, IOException {
        client.call(PROCEDURE_UNMOUNT, MOUNT_VERSION, dirPath, XdrVoid.XDR_VOID);

    }

}
// End of Mount1Client.java
