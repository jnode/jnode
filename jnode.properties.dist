# This file contain custom JNode properties used in the JNode build process.
#
# Copy this file to jnode.properties and edit that file as needed.
#

# -----------------------------------------------
# Settings for initjar building

# Set this directory to the directory containing custom plugin lists 
# if you have custom initjars to build.
# custom.plugin-list.dir = ${root.dir}/local/plugin-lists/

# Custom GRUB menu for JNode CD image
#grub.menu.cdrom=${root.dir}/local/menu-cdrom.lst

# Uncomment this property if you do not want the default initjars to be build.
# no.default.initjars = 1

# Set this property to the directory containing user applications for the 
# jar packager (tool to easily create a jnode plugin from a regular jar file)
# user.applications.dir = ${root.dir}/local/applications/

# The jar packager adds the user plugins to the plugin list specified here.
# target.plugin.list=default

# -----------------------------------------------
# Settings for the bootdisk image

# Uncomment this property if you do not want bootdisk image to be build.
# no.bootdisk = 1

# -----------------------------------------------
# Settings for the netboot build

# Uncomment this property if you do not want netboot directory to be build.
# no.netboot = 1

# -----------------------------------------------
# Settings for the memory manager

# Default memory manager (selected when no other memory manager is selected)
# jnode.memmgr.plugin.id=org.jnode.vm.memmgr.def

# Uncomment to enable MMTk NoGC based memory manager (still very beta)
# jnode.memmgr.plugin.id=org.jnode.vm.memmgr.mmtk.nogc

# Uncomment to enable MMTk GenRC based memory manager (still very alpha)
# jnode.memmgr.plugin.id=org.jnode.vm.memmgr.mmtk.genrc

# -----------------------------------------------
# Settings for the document-plugins task

# Uncomment this if you want the document-plugins task to include a tree page.
# You must have dot installed for this, see http://www.graphviz.org/
# jnode.plugin.doc.tree = true

# -----------------------------------------------
# Settings for use of NT bootloader (NT/Me/XP)

# Changes these values to match the disk/partition where windows is installed.
# the value is of the form (hdx,y) where :
# - x is the disk number (starting from 0)
# - y is the partition number (starting from 0)
partition-nt=(hd0,1)

# Path to install jnode. The drive must be where is installed windows
jnode.install-nt.dir=C:\jnode

# -----------------------------------------------
# Settings for the compiler

# Uncomment this if you want use custom compiler arguments
#compilerarg=-Xlint:unchecked

# -----------------------------------------------
# Set up the host and port where the JNode debugger server is available.
# This is needed by the hotswap ant target.
jnode.debugger.host=
jnode.debugger.port=6789

# -----------------------------------------------
# Settings for a VMware virtual machine
# -----------------------------------------------

# Uncomment and edit this line if you want to override the settings
# in the 'jnode-x86-*.vmx' file.  For example, you may want to include
# settings to configure a VMware virtual hard drive, or real hard drive.
# Refer to the maintainers pages on the JNode website for details.
# Notes:
# - Settings in the override file should be in standard VMX syntax.
# - The settings override the default settings, including (if you
#   set them) the memSize and/or logFile parameters set in the
#   ant build.xml files.
# - Any non-absolute pathnames in the VMX settings are resolved relative
#   to the VMX file's location!

#vmware.vmx.overrides=<some-file-containing-vmx-settings>

# -----------------------------------------------
# Custom system properties 
# -----------------------------------------------

jnode.java.home=/jnode
jnode.java.io.tmpdir=/jnode/tmp
jnode.user.home=/jnode/home

# -----------------------------------------------
# Enable or disable security under JNode
# -----------------------------------------------

#jnode.security.enabled=true

# -----------------------------------------------
# Custom build tools
# -----------------------------------------------
# jnode.enable.mkisofs=true

# -----------------------------------------------
# If enabled, the build system will not try to
# download the classlib binaries from the net.
# Instead the quickdeploy ANT target should be run
# in classlib6 to get the binaries.
# -----------------------------------------------
#jnode.local.classlib=true
