<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plugin SYSTEM "jnode.dtd">

<plugin id="org.jnode.shell.command"
  name="JNode System Commands"
  version="@VERSION@"
        license-name="lgpl"
  provider-name="JNode.org">

  <requires>
    <import plugin="org.jnode.shell.help"/>
  </requires>

  <runtime>
    <library name="jnode-shell.jar">
      <export name="org.jnode.shell.command.*"/>
      <export name="org.jnode.shell.command.benchmark.*"/>
      <export name="org.jnode.shell.command.benchmark.jgfutil.*"/>
      <export name="org.jnode.shell.command.benchmark.section1.*"/>
    </library>
  </runtime>

  <extension point="org.jnode.shell.aliases">
    <alias name="alias" class="org.jnode.shell.command.AliasCommand"/>
    <alias name="class" class="org.jnode.shell.command.ClassCommand"/>
    <alias name="classpath" class="org.jnode.shell.command.ClasspathCommand" internal="yes"/>
    <alias name="compile" class="org.jnode.shell.command.CompileCommand"/>
    <alias name="disasm" class="org.jnode.shell.command.DisassembleCommand"/>
    <alias name="date" class="org.jnode.shell.command.DateCommand"/>
    <alias name="echo" class="org.jnode.shell.command.EchoCommand"/>
    <alias name="env" class="org.jnode.shell.command.EnvCommand"/>
    <alias name="exit" class="org.jnode.shell.command.ExitCommand"/>
    <alias name="set" class="org.jnode.shell.command.SetCommand"/>
    <alias name="exec" class="org.jnode.shell.command.ExecCommand"/>
    <alias name="gc" class="org.jnode.shell.command.GcCommand"/>
    <alias name="help" class="org.jnode.shell.command.HelpCommand"/>
    <alias name="history" class="org.jnode.shell.command.HistoryCommand"/>
    <alias name="java" class="org.jnode.shell.command.JavaCommand"/>
    <alias name="kill" class="org.jnode.shell.command.KillCommand"/>
    <alias name="memory" class="org.jnode.shell.command.MemoryCommand"/>
    <alias name="namespace" class="org.jnode.shell.command.NamespaceCommand"/>
    <alias name="thread" class="org.jnode.shell.command.ThreadCommand"/>
    <alias name="loadkeys" class="org.jnode.shell.command.LoadkeysCommand"/>
    <alias name="run" class="org.jnode.shell.command.RunCommand"/>
    <alias name="locale" class="org.jnode.shell.command.LocaleCommand"/>
    <alias name="onheap" class="org.jnode.shell.command.OnHeapCommand"/>
    <alias name="grep" class="org.jnode.shell.command.GrepCommand"/>
    <alias name="syntax" class="org.jnode.shell.command.SyntaxCommand"/>
  </extension>
  
  <extension point="org.jnode.shell.syntaxes">
    <syntax alias="alias">
      <empty description="list all aliases"/>
      <option argLabel="remove" shortName="r" description="remove an alias"/>
      <sequence description="create or update an alias">
        <argument argLabel="alias"/>
        <argument argLabel="className"/>
      </sequence>
    </syntax>
    <syntax alias="class">
      <argument argLabel="className" description="list details of a Java class"/>
    </syntax>
    <syntax alias="classpath">
      <empty description="print the current classpath"/>
      <option argLabel="addUrl" longName="add" description="add a URL to the classpath"/>
      <option argLabel="clear" longName="clear" description="remove all URLs from the classpath"/>
      <option argLabel="refresh" longName="refresh" description="refresh the loaded classes on next use"/>
    </syntax>
    <syntax alias="compile">
      <sequence description="compile a class to native code">
        <optionSet>
          <option argLabel="test" longName="test"/>
          <option argLabel="level" longName="level"/>
        </optionSet>
        <argument argLabel="className"/>
      </sequence>
    </syntax>
    <syntax alias="date" description="print the current date"/>
    <syntax alias="disasm">
      <sequence description="disassemble a native code class">
        <optionSet>
          <option argLabel="test" longName="test"/>
          <option argLabel="level" longName="level"/>
        </optionSet>
        <argument argLabel="className"/>
        <repeat minCount="0" maxCount="1">
          <argument argLabel="methodName"/>
        </repeat>
      </sequence>
    </syntax>
    <syntax alias="set">
      <sequence description="set a system property">
        <argument argLabel="key"/>
        <argument argLabel="value"/>
      </sequence>
      <argument description="remove a system property" argLabel="key"/>
    </syntax>
    <syntax alias="syntax">
      <option argLabel="list" longName="list" shortName="l" description="list aliases with syntaxes"/>
      <option argLabel="dumpAll" longName="dump" shortName="d" description="dump all syntaxes"/>
      <sequence description="dump the syntax for a given alias">
        <option argLabel="dump" longName="dump" shortName="d"/>
        <argument argLabel="alias"/>
      </sequence>
      <sequence description="load a new syntax for a given alias">
        <option argLabel="file" longName="load" shortName="l"/>
        <argument argLabel="alias"/>
      </sequence>
      <sequence description="set a system property">
        <option argLabel="remove" longName="remove" shortName="r"/>
        <argument argLabel="alias"/>
      </sequence>
    </syntax>
  </extension>

  <extension point="org.jnode.security.permissions">
    <permission class="java.util.PropertyPermission" name="*" actions="read,write"/>
    <permission class="java.lang.RuntimePermission" name="getProtectionDomain"/>
    <permission class="java.lang.RuntimePermission" name="createClassLoader"/>
    <permission class="java.lang.RuntimePermission" name="setContextClassLoader"/>
    <permission class="java.lang.RuntimePermission" name="modifyThreadGroup"/>  
    <permission class="java.io.FilePermission" name="<<ALL FILES>>" actions="read,write"/>
    <permission class="org.jnode.security.JNodePermission" name="getVmThread"/>
    <permission class="org.jnode.security.JNodePermission" name="getVmClass"/>
    <permission class="java.net.SocketPermission" name="*" actions="resolve"/>
    <permission class="java.net.SocketPermission" name="*:0-" actions="connect,resolve"/>
    <permission class="java.lang.RuntimePermission" name="writeFileDescriptor"/>
    <permission class="java.lang.RuntimePermission" name="readFileDescriptor"/>
  </extension>

</plugin>
