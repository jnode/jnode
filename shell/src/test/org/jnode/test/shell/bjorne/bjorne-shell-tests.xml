<testSpecs>
    <title>Bjorne interpreter tests</title>
    <plugin>
        <id>org.jnode.shell.bjorne</id>
        <class>org.jnode.test.shell.bjorne.BjornePseudoPlugin</class>
    </plugin>
    <plugin>
        <id>org.jnode.shell.command.posix</id>
    </plugin>
    <testSpec>
        <title>simple</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
echo HI
        </script>
        <output>HI
</output>
        <rc>0</rc>
    </testSpec>
    <testSpec>
        <title>$?</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
true
echo $?
false
echo $?
</script>
        <output>0
1
</output>
        <rc>0</rc>
    </testSpec>
    <testSpec>
        <title>``</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
A=1
echo $A
B=`expr $A + 1`
echo $B
C=`echo $A $A`
echo $C
</script>
        <output>1
2
1 1
</output>
        <rc>0</rc>
    </testSpec>
    <testSpec>
        <title>if ... then ... fi</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
if true ; then echo HI ; fi
        </script>
        <output>HI
</output>
        <rc>0</rc>
    </testSpec>
    <testSpec>
        <title>if ... then ... else ... fi</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
if true ; then echo HI ; else echo HO; fi
if false ; then echo HI ; else echo HO; fi
        </script>
        <output>HI
HO
</output>
        <rc>0</rc>
    </testSpec>
    <testSpec>
        <title>if ... then ... elif ... else ... fi</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
if true ; then echo HI ; elif false ; then echo HO ; else echo HUM; fi
if false ; then echo HI ; elif true ; then echo HO ; else echo HUM; fi
if false ; then echo HI ; elif false ; then echo HO ; else echo HUM; fi
        </script>
        <output>HI
HO
HUM
</output>
        <rc>0</rc>
    </testSpec>
    <testSpec>
        <title>while ... do ... done</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
A=5
while expr $A != 0 ; do echo A is $A ; A=`expr $A - 1`; done
        </script>
        <output>1
A is 5
1
A is 4
1
A is 3
1
A is 2
1
A is 1
0
</output>
        <rc>0</rc>
    </testSpec>
    <testSpec>
        <title>while ... do ... break ... done</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
                A=5
                while expr $A != 0 ; do echo A is $A ; if expr $A = 2 ; then break ; fi ; A=`expr $A - 1`; done
        </script>
        <output>1
A is 5
0
1
A is 4
0
1
A is 3
0
1
A is 2
1
</output>
        <rc>0</rc>
    </testSpec>
    <testSpec>
        <title>${...} expansions</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
                A=cat
                B=
                echo A is $A
                echo A is ${A}
                echo B is $B
                echo B is ${B}
                echo X is $X
                echo X is ${X}
                echo A length is ${#A}
                echo B length is ${#B}
                echo X length is ${#X}
                echo A :- dog is ${A:-dog}
                echo B :- dog is ${B:-dog}
                echo X :- dog is ${X:-dog}
                echo A - dog is ${A-dog}
                echo B - dog is ${B-dog}
                echo X - dog is ${X-dog}
                echo A :- null is ${A:-}
                echo B :- null is ${B:-}
                echo X :- null is ${X:-}
                echo A - null is ${A-}
                echo B - null is ${B-}
                echo X - null is ${X-}
        </script>
        <output>A is cat
A is cat
B is
B is
X is
X is
A length is 3
B length is 0
X length is 0
A :- dog is cat
B :- dog is dog
X :- dog is dog
A - dog is cat
B - dog is
X - dog is dog
A :- null is cat
B :- null is
X :- null is
A - null is cat
B - null is
X - null is
</output>
        <rc>0</rc>
    </testSpec>
    <testSpec>
        <title>${..?..} expansions #1</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
                A=cat
                B=
                echo A :? dog is ${A:?dog}
                echo B :? dog is ${B:?dog}
                echo X :? dog is ${X:?dog}
        </script>
        <output>A :? dog is cat
</output>
    <error>dog
</error>
        <rc>1</rc>
    </testSpec>
    <testSpec>
        <title>${..?..} expansions #2</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
                A=cat
                B=
                echo A :? dog is ${A:?dog}
                echo X :? dog is ${X:?dog}
        </script>
        <output>A :? dog is cat
</output>
    <error>dog
</error>
        <rc>1</rc>
    </testSpec>
    <testSpec>
        <title>${..?..} expansions #3</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
                A=cat
                B=
                echo A ? dog is ${A?dog}
                echo B ? dog is ${B?dog}
                echo X ? dog is ${X?dog}
        </script>
        <output>A ? dog is cat
B ? dog is
</output>
    <error>dog
</error>
        <rc>1</rc>
    </testSpec>
    <testSpec>
        <title>${..?..} expansions #4</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
                A=cat
                B=
                echo A :? null is ${A:?}
                echo B :? null is ${B:?}
                echo X :? null is ${X:?}
        </script>
        <output>A :? null is cat
</output>
    <error>B is unset or null
</error>
        <rc>1</rc>
    </testSpec>
    <testSpec>
        <title>${..?..} expansions #5</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
                A=cat
                B=
                echo A :? null is ${A:?}
                echo X :? null is ${X:?}
        </script>
        <output>A :? null is cat
</output>
    <error>X is unset or null
</error>
        <rc>1</rc>
    </testSpec>
    <testSpec>
        <title>${..?..} expansions #6</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
                A=cat
                B=
                echo A ? null is ${A?}
                echo B ? null is ${B?}
                echo X ? null is ${X?}
        </script>
        <output>A ? null is cat
B ? null is
</output>
    <error>X is unset
</error>
        <rc>1</rc>
    </testSpec>
    <testSpec>
        <title>${..=..} expansions</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
                A=cat
                B=
                echo A := dog is ${A:=dog}
                echo $A
                echo B := dog is ${B:=dog}
                echo $B
                echo X := dog is ${X:=dog}
                echo $X
        </script>
        <output>A := dog is cat
cat
B := dog is dog
dog
X := dog is dog
dog
</output>
        <rc>0</rc>
    </testSpec>
    <testSpec>
        <title>${..=..} expansions #2</title>
        <command>test</command>
        <runMode>AS_SCRIPT</runMode>
        <script>#!bjorne
                A=cat
                B=
                echo A = dog is ${A=dog}
                echo $A
                echo B = dog is ${B=dog}
                echo $B
                echo X = dog is ${X=dog}
                echo $X
        </script>
        <output>A = dog is cat
cat
B = dog is

X = dog is dog
dog
</output>
        <rc>0</rc>
    </testSpec>
</testSpecs>